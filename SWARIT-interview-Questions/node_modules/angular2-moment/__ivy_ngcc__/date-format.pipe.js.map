{"version":3,"file":"date-format.pipe.js","sources":["date-format.pipe.ts"],"names":[],"mappings":";AAAA,6DAA6D;;AAC7D;AAEiB;AAGA;AAGM;AAGlB;AAIK;AAAI;AAdd,sCAAqE;AACrE,+BAAiC;AAEjC,4FAA4F;AAC5F,IAAM,iBAAiB,GAAyC,MAAO,CAAC,OAAO,IAAI,MAAM,CAAC;AAG1F;AAAmD,IAAnD;AAA6B,IAK7B,CAAC;AACD,IALE,kCAAS,GAAT,UAAU,KAA6C;AAAK,QAAH,cAAc;AAAE,aAAhB,UAAc,EAAd,qBAAc,EAAd,IAAc;AAAK,YAAnB,6BAAc;AAAE;AAC3E,QAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;AAAE,YAAD,MAAM,CAAC,EAAE,CAAC;AAC1B,QAAI,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,IAAE,CAAC;KAJU,cAAc,yBAD1B,WAAI,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,SAClB;MAAc,CAK1B;;;;gDAAC;AAEF,IAFA,qBAAC;AAED,CAFC,AALD,IAKC;AALY,wCAAc;AAAE","sourcesContent":["/* angular2-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, ChangeDetectorRef, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n// under systemjs, moment is actually exported as the default export, so we account for that\r\nconst momentConstructor: (value?: any) => moment.Moment = (<any>moment).default || moment;\r\n\r\n@Pipe({ name: 'amDateFormat' })\r\nexport class DateFormatPipe implements PipeTransform {\r\n  transform(value: Date | moment.Moment | string | number, ...args: any[]): string {\r\n    if (!value) return '';\r\n    return momentConstructor(value).format(args[0]);\r\n  }\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}