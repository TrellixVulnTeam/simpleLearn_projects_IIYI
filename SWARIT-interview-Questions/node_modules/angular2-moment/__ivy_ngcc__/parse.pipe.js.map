{"version":3,"file":"parse.pipe.js","sources":["parse.pipe.ts"],"names":[],"mappings":";;;;;;;;;AAAA,sCAAoD;AACpD,+BAAiC;AAEjC,4FAA4F;AAC5F,IAAM,iBAAiB,GAAyC,MAAO,CAAC,OAAO,IAAI,MAAM,CAAC;AAG1F;AAA8C,IAA9C;AAAwB,IAIxB,CAAC;AACD,IAJE,6BAAS,GAAT,UAAU,KAAa,EAAE,MAAc;AAAK,QAC1C,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACjC,IAAE,CAAC;KAHU,SAAS,yBADrB,WAAI,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,SACb;MAAS,CAIrB;;;;gDAAC;AAEF,IAFA,gBAAC;AAED,CAFC,AAJD,IAIC;AAJY,8BAAS;AAAE","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n// under systemjs, moment is actually exported as the default export, so we account for that\r\nconst momentConstructor: (value?: any) => moment.Moment = (<any>moment).default || moment;\r\n\r\n@Pipe({ name: 'amParse' })\r\nexport class ParsePipe implements PipeTransform {\r\n  transform(value: string, format: string): moment.Moment {\r\n    return moment(value, format);\r\n  }\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}